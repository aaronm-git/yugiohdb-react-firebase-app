{"version":3,"sources":["components/AlgoliaSearch.js","firebase.js","components/CardDetails.js","components/Loading.js","components/CardImage.js","components/CardPage.js","components/SiteNavBar.js","components/SiteFooter.js","components/Home.js","components/NotFound.js","components/App.js","serviceWorker.js","index.js","yugioh-logo.png"],"names":["searchClient","algoliasearch","process","AlgoliaSearch","location","selectThisCard","React","useState","rankRangeValue","CustomSearchBox","connectSearchBox","currentRefinement","refine","className","style","left","margin","FormControl","id","aria-label","value","onChange","event","currentTarget","placeholder","size","autoFocus","paddingLeft","CustomHits","connectHits","hits","CardDeck","map","hit","Card","key","objectID","minWidth","maxWidth","height","backgroundImage","imageURLs","full","backgroundRepeat","backgroundSize","ImgOverlay","backgroundColor","top","atk","def","type","lvl2","substring","lastIndexOf","lvl0","race","Body","Title","to","onClick","name","CustomPagination","connectPagination","nbPages","range","filter","i","MobilePagination","Pagination","Item","preventDefault","active","page","jumpTo","CustomRefinementList","connectHierarchicalMenu","HierarchicalMenu","items","createURL","item","label","href","fontWeight","isRefined","Badge","variant","count","connectRefinementList","isFromSearch","searchForItems","isRange","rangeValue","rangeUpdate","console","log","Range","Form","Control","custom","min","max","step","e","target","CheckBox","Check","Text","Row","Col","InstantSearch","indexName","md","ClearRefinements","attribute","Configure","hitsPerPage","defaultRefinement","URLSearchParams","search","get","PoweredBy","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","CardDetails","card","GetListGroup","cardATK","cardRace","includes","ListGroup","cardDescription","desc","replace","color","textColor","getType","whiteSpace","archetype","Object","keys","length","Spinner","animation","role","CardImage","cardId","imgURL","setImgURL","runComplete","setRunComplete","foundImage","setFoundImage","verifyImgExists","functions","httpsCallable","useEffect","a","result","data","Data","exists","Status","storage","ref","getDownloadURL","url","error","findImage","Image","src","Loading","db","firestore","CardPage","setCard","cardReady","setCardReady","useParams","collection","where","parseInt","cardRef","docs","window","pathname","split","getMissingCard","card_images","lg","SiteNavBar","history","useHistory","searchTerm","setSearchTerm","Navbar","expand","bg","logo","alt","fluid","maxHeight","onSubmit","push","SiteFooter","Environment","Nav","Home","recentCards","overflow","cardItem","NotFound","Component","App","JSON","parse","localStorage","getItem","recentlyViewed","setRecentlyViewed","selectedCard","setItem","stringify","newRecentlyViewedList","slice","Container","minHeight","path","render","props","component","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.c473dd67.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport {\n  InstantSearch,\n  ClearRefinements,\n  connectHierarchicalMenu,\n  Configure,\n  PoweredBy,\n  connectSearchBox,\n  connectHits,\n  connectPagination,\n  connectRefinementList,\n  Highlight,\n} from \"react-instantsearch-dom\";\nimport {\n  Row,\n  Col,\n  FormControl,\n  Card,\n  CardDeck,\n  Pagination,\n  Badge,\n  Form,\n} from \"react-bootstrap\";\nimport {\n  Search,\n  ChevronLeft,\n  ChevronRight,\n  ChevronDoubleLeft,\n  ChevronDoubleRight,\n} from \"react-bootstrap-icons\";\n\nconst searchClient = algoliasearch(\n  process.env.REACT_APP_ALGOLIA_APP_ID,\n  process.env.REACT_APP_ALGOLIA_PUBLIC_KEY\n);\n\nexport default function AlgoliaSearch({ location, selectThisCard }) {\n  const [rankRangeValue, setRankRangeValue] = React.useState(0);\n  const getQuery = () => {\n    const query = new URLSearchParams(location.search);\n    return query.get(\"q\");\n  };\n  const AlgoliaHits = ({ hits }) => {\n    return (\n      <CardDeck>\n        {hits.map((hit) => (\n          <Card\n            key={hit.objectID}\n            className=\"shadow-sm mb-3 mx-auto\"\n            style={{ minWidth: \"200px\", maxWidth: \"200px\" }}\n          >\n            <div\n              style={{\n                height: \"200px\",\n                backgroundImage: `url(${hit.imageURLs.full}), url('https://storage.cloud.google.com/yugiohdb-app.appspot.com/cards/default.jpg')`,\n                backgroundRepeat: \"none\",\n                backgroundSize: \"cover\",\n              }}\n            />\n            <Card.ImgOverlay\n              className=\"py-1 text-white\"\n              style={{\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                height: \"2rem\",\n                top: \"168px\",\n              }}\n            >\n              <div>\n                {hit.atk || hit.def ? (\n                  <div className=\"d-flex justify-content-between\">\n                    <span>\n                      {hit.atk}/{hit.def}\n                    </span>\n                    <span>\n                      {hit.type.lvl2\n                        ? hit.type.lvl2.substring(\n                            hit.type.lvl2.lastIndexOf(\" \")\n                          )\n                        : hit.type.lvl0}\n                    </span>\n                  </div>\n                ) : (\n                  <span>\n                    {hit.type.lvl0}/{hit.race}\n                  </span>\n                )}\n              </div>\n            </Card.ImgOverlay>\n            <Card.Body>\n              <Card.Title>\n                <Link\n                  to={`/card/${hit.objectID}`}\n                  onClick={() => selectThisCard(hit)}\n                >\n                  {hit.name}\n                </Link>\n              </Card.Title>\n            </Card.Body>\n          </Card>\n        ))}\n      </CardDeck>\n    );\n  };\n  const AlgoliaSearchBox = ({ currentRefinement, refine }) => {\n    return (\n      <div className=\"position-relative mb-4\">\n        <Search\n          className=\"position-absolute text-secondary\"\n          style={{ left: \"0\", margin: \"1rem\" }}\n        />\n        <FormControl\n          id=\"algolia-searchBox\"\n          aria-label=\"Large\"\n          value={currentRefinement}\n          onChange={(event) => refine(event.currentTarget.value)}\n          placeholder=\"Search card by name\"\n          size=\"lg\"\n          autoFocus\n          style={{ paddingLeft: \"2.75rem\" }}\n        />\n      </div>\n    );\n  };\n  const AlgoliaPagination = ({ currentRefinement, nbPages, refine }) => {\n    const left = [\n        currentRefinement - 1 > 0 ? \"First\" : null,\n        currentRefinement - 1 > 0 ? \"Prev\" : null,\n        currentRefinement - 3 > 0 ? \"...\" : null,\n        currentRefinement - 2 > 0 ? currentRefinement - 2 : null,\n        currentRefinement - 1 > 0 ? currentRefinement - 1 : null,\n      ],\n      right = [\n        currentRefinement + 1 <= nbPages ? currentRefinement + 1 : null,\n        currentRefinement + 2 <= nbPages ? currentRefinement + 2 : null,\n        currentRefinement + 3 <= nbPages ? \"...\" : null,\n        currentRefinement + 1 <= nbPages ? \"Next\" : null,\n        currentRefinement + 1 <= nbPages ? \"Last\" : null,\n      ],\n      range = [...left, currentRefinement, ...right].filter((i) => i !== null);\n\n    const MobilePagination = () => {\n      return (\n        <Pagination size=\"lg\" className=\"justify-content-center d-lg-none\">\n          {currentRefinement - 1 > 0 ? (\n            <Pagination.Item\n              onClick={(event) => {\n                event.preventDefault();\n                refine(currentRefinement - 1);\n              }}\n            >\n              <ChevronLeft />\n            </Pagination.Item>\n          ) : (\n            \"\"\n          )}\n          <Pagination.Item\n            key={`algoliaPage-${currentRefinement}-mobile`}\n            active\n          >\n            {currentRefinement}\n          </Pagination.Item>\n          {currentRefinement + 1 < nbPages ? (\n            <Pagination.Item\n              onClick={(event) => {\n                event.preventDefault();\n                refine(currentRefinement + 1);\n              }}\n            >\n              <ChevronRight />\n            </Pagination.Item>\n          ) : (\n            \"\"\n          )}\n        </Pagination>\n      );\n    };\n    return (\n      <>\n        <Pagination size=\"lg\" className=\"justify-content-end d-none d-lg-flex\">\n          {range.map((page) => {\n            let jumpTo;\n            let name;\n            switch (page) {\n              case \"First\":\n                jumpTo = 1;\n                name = <ChevronDoubleLeft />;\n                break;\n              case \"Prev\":\n                jumpTo = currentRefinement - 1;\n                name = <ChevronLeft />;\n                break;\n              case \"Next\":\n                jumpTo = currentRefinement + 1;\n                name = <ChevronRight />;\n                break;\n              case \"Last\":\n                jumpTo = nbPages;\n                name = <ChevronDoubleRight />;\n                break;\n              default:\n                jumpTo = page;\n                name = page;\n                break;\n            }\n            return (\n              <Pagination.Item\n                className={`${page === \"...\" ? \"disabled\" : \"\"}`}\n                active={page === currentRefinement}\n                key={`algoliaPage-${page}`}\n                onClick={(event) => {\n                  event.preventDefault();\n                  refine(jumpTo);\n                }}\n              >\n                {name}\n              </Pagination.Item>\n            );\n          })}\n        </Pagination>\n        <MobilePagination />\n      </>\n    );\n  };\n  const HierarchicalMenu = ({ items, refine, createURL }) => (\n    <ul>\n      {items.map((item) => (\n        <li key={item.label}>\n          <a\n            href={createURL(item.value)}\n            style={{ fontWeight: item.isRefined ? \"bold\" : \"\" }}\n            onClick={(event) => {\n              event.preventDefault();\n              refine(item.value);\n            }}\n            className=\"text-decoration-none\"\n          >\n            {item.label} <Badge variant=\"warning\">{item.count}</Badge>\n          </a>\n          {item.items && (\n            <HierarchicalMenu\n              items={item.items}\n              refine={refine}\n              createURL={createURL}\n            />\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n  const RefinementList = ({\n    items, //object[]\n    currentRefinement, //string[]\n    refine, //function\n    isFromSearch, //boolean\n    searchForItems, //function\n    createURL, //function\n    label, //string\n    isRange,\n    rangeValue,\n    rangeUpdate,\n  }) => {\n    console.log(rangeUpdate);\n\n    const Range = (\n      <div className=\"d-flex justify-content-between flex-nowrap\">\n        <Form.Control\n          type=\"range\"\n          custom\n          min=\"0\"\n          max=\"10\"\n          step=\"1\"\n          value={rankRangeValue}\n          onChange={(e) => rangeUpdate(e.target.value)}\n        />\n        <span>{rangeValue}</span>\n      </div>\n    );\n    const CheckBox = (\n      <>\n        {items.map((item) => (\n          <Form.Check\n            type=\"checkbox\"\n            id={`default-${item.label}`}\n            key={`checkbox-${item.label}`}\n            label={\n              <>\n                {item.label.substring(item.label.lastIndexOf(\">\") + 1)}\n                &nbsp;&nbsp;\n                <Badge variant=\"warning\">{item.count}</Badge>\n              </>\n            }\n            style={{ fontWeight: item.isRefined ? \"bold\" : \"\" }}\n            onClick={(event) => {\n              // event.preventDefault();\n              refine(item.value);\n            }}\n          />\n        ))}\n      </>\n    );\n\n    return (\n      <Card className=\"my-2\">\n        <Card.Body>\n          <Card.Text>{label || \"\"}</Card.Text>\n          {isRange ? Range : CheckBox}\n        </Card.Body>\n      </Card>\n    );\n  };\n  const CustomSearchBox = connectSearchBox(AlgoliaSearchBox);\n  const CustomHits = connectHits(AlgoliaHits);\n  const CustomPagination = connectPagination(AlgoliaPagination);\n  const CustomHierarchicalMenu = connectHierarchicalMenu(HierarchicalMenu);\n  const CustomRefinementList = connectRefinementList(RefinementList);\n\n  return (\n    <Row>\n      <Col>\n        <InstantSearch indexName=\"cards\" searchClient={searchClient}>\n          <Row>\n            <Col md=\"3\" className=\"pt-5\">\n              <ClearRefinements className=\"my-2\" />\n              {/* <CustomHierarchicalMenu\n                attributes={[\n                  'type.lvl0',\n                  'type.lvl1',\n                  'type.lvl2',\n                ]}\n               /> */}\n              <CustomRefinementList attribute=\"type.lvl1\" label=\"Deck\" />\n              <CustomRefinementList attribute=\"type.lvl0\" label=\"Card Type\" />\n              <CustomRefinementList attribute=\"type.lvl2\" label=\"Ability\" />\n              <CustomRefinementList attribute=\"race\" label=\"Race\" />\n              <CustomRefinementList attribute=\"archetype\" label=\"Archetype\" />\n              {/* <CustomRefinementList\n                attribute=\"level\"\n                label=\"Rank\"\n                isRange\n                rangeValue={rankRangeValue}\n                rangeUpdate={setRankRangeValue}\n              /> */}\n            </Col>\n            <Col md=\"9\">\n              <Configure hitsPerPage={12} />\n              <CustomSearchBox defaultRefinement={getQuery()} />\n              <CustomHits />\n              <CustomPagination />\n            </Col>\n          </Row>\n          <PoweredBy className=\"justify-content-center\" />\n        </InstantSearch>\n      </Col>\n    </Row>\n  );\n}\n","import firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport { ListGroup, Badge } from \"react-bootstrap\";\nexport default function CardDetails({ card }) {\n  const getType = (type) => {\n    let color = \"\";\n    let textColor = \"\";\n    switch (type) {\n      case \"Effect Monster\":\n        color = \"orange\";\n        textColor = \"white\";\n        break;\n      case \"Trap Card\":\n        color = \"#af3568\";\n        textColor = \"white\";\n        break;\n      case \"Spell Card\":\n        color = \"#3edf80\";\n        textColor = \"white\";\n        break;\n      default:\n        break;\n    }\n    return (\n      <Badge variant=\"secondary\" style={{ backgroundColor: color, color: textColor }}>\n        {type}\n      </Badge>\n    );\n  };\n  const GetListGroup = ({ card }) => {\n    let cardATK;\n    let cardRace;\n    if (card.type && card.type.includes(\"Monster\")) {\n      cardATK = (\n        <ListGroup.Item>\n          ATK: {card.atk} / DEF: {card.def}\n        </ListGroup.Item>\n      );\n      cardRace = <Badge variant=\"secondary\">{card.race}</Badge>;\n    }\n    let cardDescription = card.desc.replace(\"●\", \"\\n●\");\n    return (\n      <ListGroup variant=\"flush\">\n        <ListGroup.Item>\n          <div className=\"d-flex justify-content-between\">\n            <div>\n              {getType(card.type)} / ID: {card.id}\n            </div>\n            <div>\n              <Badge variant=\"secondary\">{card.attribute}</Badge> {cardRace}\n            </div>\n          </div>\n        </ListGroup.Item>\n        {cardATK}\n        <ListGroup.Item style={{ whiteSpace: \"pre-line\" }}>{cardDescription}</ListGroup.Item>\n        <ListGroup.Item>\n          <p>Type: {card.type}</p>\n          <p>Race: {card.race}</p>\n          <p>Archetype: {card.archetype}</p>\n        </ListGroup.Item>\n        {/* <ListGroup.Item>\n            <p>TCG Initial Release: {card.archetype}</p>\n            <p>OCG Initial Release: {card.archetype}</p>\n          </ListGroup.Item> */}\n      </ListGroup>\n    );\n  };\n  return (\n    <div className=\"position-relative\">\n      <h2 className=\"text-center h4\">{card.name}</h2>\n      {Object.keys(card).length ? <GetListGroup card={card} /> : <h5>Invalid Id</h5>}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nexport default () => {\n  return (\n    <div className=\"text-center my-3\">\n      <Spinner animation=\"border\" role=\"status\" variant=\"warning\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n};\n","import React from \"react\";\nimport firebase from \"../firebase\";\n\nimport { Image } from \"react-bootstrap\";\nimport Loading from \"./Loading\";\n\nexport default function CardImage({ cardId }) {\n  const [imgURL, setImgURL] = React.useState(\"\");\n  const [runComplete, setRunComplete] = React.useState(false);\n  const [foundImage, setFoundImage] = React.useState(false);\n  const verifyImgExists = firebase.functions().httpsCallable(\"verifyImgExists\");\n  // const verifyImgExists = firebase\n  //   .functions()\n  //   .useFunctionsEmulator(\"http://localhost:5001/yugiohdb-app/us-central1/verifyImgExists\");\n  React.useEffect(() => {\n    if (cardId && runComplete === false) {\n      async function findImage() {\n        try {\n          const result = await verifyImgExists({ cardId });\n          if (result.data.Data.exists && result.data.Status !== 500) {\n            const url = await firebase.storage().ref(`cards/${cardId}.jpg`).getDownloadURL();\n            setImgURL(url);\n          }\n        } catch (error) {\n          console.error(error);\n          setImgURL(\"https://sportzor.com/images/ygo_cardback_sleeves19.jpg\");\n        }\n        setFoundImage(true);\n      }\n      findImage();\n      setRunComplete(true);\n    }\n  }, [cardId, imgURL, runComplete, verifyImgExists]);\n\n  return <>{foundImage ? <Image src={imgURL} className=\"w-75\" /> : <Loading />}</>;\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport firebase from \"../firebase\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport CardDetails from \"./CardDetails\";\nimport Loading from \"./Loading\";\nimport CardImage from \"./CardImage\";\n\nconst db = firebase.firestore();\nexport default function CardPage() {\n  const [card, setCard] = React.useState({});\n  const [cardReady, setCardReady] = React.useState(false);\n  const { id } = useParams();\n  React.useEffect(() => {\n    const getMissingCard = async () => {\n      console.log(\"Querying...\");\n      const cardRef = await db.collection(\"cards\").where(\"id\", \"==\", parseInt(id, 10)).get();\n      if (cardRef.size) {\n        setCard(cardRef.docs[0].data());\n        setCardReady(true);\n      } else {\n        window.location.replace(`/${window.location.pathname.split(\"/\")[1]}/404`);\n      }\n    };\n    getMissingCard();\n  }, [id]);\n  return (\n    <Row>\n      <Col className=\"text-center mb-2 mb-md-0\">\n        <CardImage cardId={cardReady ? card.card_images[0].id : \"\"} />\n      </Col>\n      <Col md=\"8\" lg=\"5\">\n        {cardReady ? <CardDetails card={card} /> : <Loading />}\n      </Col>\n      <Col md=\"12\" lg=\"3\" className=\"text-center py-3\">\n        <h5>Card Stats</h5>\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Navbar, Form, FormControl, Image } from \"react-bootstrap\";\nimport logo from \"../yugioh-logo.png\"\n\nexport default function SiteNavBar() {\n  const history = useHistory();\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const updateSearchTerm = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const searchTermSubmit = (e) => {\n    e.preventDefault();\n    history.push(`/search?q=${searchTerm}`);\n  };\n  return (\n    <Navbar expand=\"lg\" className=\"rounded shadow-lg justify-content-between\" variant=\"dark\" bg=\"dark\">\n      <Link to=\"/\" className=\"navbar-brand d-block mx-auto\">\n        <Image src={logo} alt={process.env.REACT_APP_SITE_TITLE} fluid style={{maxHeight: \"4rem\"}}/>\n      </Link>\n      <Form onSubmit={searchTermSubmit} className=\"w-100 d-flex justify-content-center justify-content-lg-end align-items-center\">\n        <FormControl type=\"text\" className=\"w-50 mr-2\" placeholder=\"Search\" onChange={updateSearchTerm} style={{maxWidth: \"200px\"}}/>\n        <Link to={`/search/?q=${searchTerm}`} className=\"btn btn-outline-warning\">\n          SEARCH\n        </Link>\n      </Form>\n    </Navbar>\n  );\n}\n","import React from \"react\";\n\nimport { Navbar, Nav, Image } from \"react-bootstrap\";\n\nexport default function SiteFooter() {\n  const Environment = () => {\n    if (process.env.NODE_ENV === \"development\") return <h5 className=\"text-uppercase\">{process.env.NODE_ENV}</h5>;\n    else return null;\n  };\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" className=\"text-white\">\n      <Nav className=\"mr-auto\">\n        <small className=\"d-block mb-3\">© 2020</small>\n      </Nav>\n      <Environment />\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport { CardDeck, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home({ recentCards, selectThisCard }) {\n  const cardItem = (card) => (\n    <Card\n      key={\"recent-\" + card.objectID}\n      className=\"mb-2 shadow-sm ml-2\"\n      style={{minWidth: \"200px\", maxWidth:\"200px\"}}\n    >\n      <div\n        style={{\n          height: \"200px\",\n          backgroundImage: `url(${card.imageURLs.full}), url('https://storage.cloud.google.com/yugiohdb-app.appspot.com/cards/default.jpg')`,\n          backgroundRepeat: \"none\",\n          backgroundSize: \"cover\",\n        }}\n      />\n      <Card.ImgOverlay\n        className=\"py-1 text-white\"\n        style={{\n          backgroundColor: \"rgba(0,0,0,0.5)\",\n          height: \"2rem\",\n          top: \"168px\",\n        }}\n      >\n        <div>\n          {typeof card.atk === \"number\" && typeof card.def === \"number\" ? (\n            <p>\n              {card.atk}/{card.def}\n            </p>\n          ) : (\n            <p>{card.race}</p>\n          )}\n        </div>\n      </Card.ImgOverlay>\n      <Card.Body>\n        <Card.Title>\n          <Link\n            to={`/card/${card.objectID}`}\n            onClick={() => selectThisCard(card)}\n          >\n            {card.name}\n          </Link>\n        </Card.Title>\n      </Card.Body>\n    </Card>\n  );\n  return (\n    <>\n      <h5>Recently Viewed Cards</h5>\n      <CardDeck className=\"row flex-nowrap\" style={{ overflow: \"scroll\" }}>\n        {recentCards ? (\n          recentCards.map((card) => cardItem(card))\n        ) : (\n          <Card>\n            <Card.Body>\n              <Card.Text className=\"text-center text-muted\">\n                No Recently Viewed Cards\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        )}\n      </CardDeck>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n        <h1>404</h1>\n        <h5>Not Found</h5>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\n\n// import SearchResults from \"./SearchResults\";\nimport AlgoliaSearch from \"./AlgoliaSearch\";\nimport CardPage from \"./CardPage\";\nimport SiteNavBar from \"./SiteNavBar\";\nimport SiteFooter from \"./SiteFooter\";\nimport Home from \"./Home\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n  const [card, setCard] = React.useState({});\n  const [recentlyViewed, setRecentlyViewed] = React.useState(JSON.parse(localStorage.getItem(\"recentlyViewed\")) || []);\n  const selectThisCard = (selectedCard) => {\n    console.log(\"Select card...\", selectedCard);\n    localStorage.setItem(\"selectedCard\", JSON.stringify(selectedCard));\n    setCard(selectedCard);\n    let newRecentlyViewedList = [\n      selectedCard,\n      ...recentlyViewed.filter((item) => {\n        return selectedCard && item ? item.objectID !== selectedCard.objectID : false;\n      }),\n    ];\n    setRecentlyViewed(newRecentlyViewedList.slice(0, 6));\n    localStorage.setItem(\"recentlyViewed\", JSON.stringify(newRecentlyViewedList));\n  };\n  return (\n    <Router>\n      <Container className=\"mb-3\" style={{ minHeight: \"calc(100vh - 83px)\" }}>\n        <Row>\n          <Col className=\"py-3\">\n            <SiteNavBar />\n          </Col>\n        </Row>\n        <Card className=\"shadow-lg\">\n          <Card.Body>\n            <Switch>\n              <Route\n                path=\"/search\"\n                render={(props) => (\n                  <AlgoliaSearch {...props} selectThisCard={(selectedCard) => selectThisCard(selectedCard)} />\n                )}\n              />\n              <Route\n                path=\"/card/:id\"\n                render={(props) => (\n                  <CardPage {...props} selectThisCard={(selectedCard) => selectThisCard(selectedCard)} card={card} />\n                )}\n              />\n              <Route path=\"/404\" component={NotFound} />\n              <Route path=\"/\">\n                <Home recentCards={recentlyViewed} selectThisCard={(selectedCard) => selectThisCard(selectedCard)} />\n              </Route>\n            </Switch>\n          </Card.Body>\n        </Card>\n      </Container>\n      <SiteFooter />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/yugioh-logo.d8b3cab0.png\";"],"sourceRoot":""}